plugins {
	id 'java'
	id 'war'
	id 'org.springframework.boot' version '3.4.5'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.n7ws'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}

	sourceSets.main.java.srcDirs = [ 'src/seed/java', 'src/main/java', 'src/utils/java' ]
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	runtimeOnly 'org.postgresql:postgresql'
	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	compileOnly("org.projectlombok:lombok:1.18.38")
	annotationProcessor("org.projectlombok:lombok:1.18.38")
	testCompileOnly("org.projectlombok:lombok:1.18.38")
	testAnnotationProcessor("org.projectlombok:lombok:1.18.38")
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.register('seed', JavaExec) {
    dependsOn classes
    mainClass = "com.n7ws.back.SeedApplication"
    classpath = sourceSets.main.runtimeClasspath
}

tasks.register('run', JavaExec) {
    dependsOn classes
    mainClass = "com.n7ws.back.BackApplication"
    classpath = sourceSets.main.runtimeClasspath
}